import { useState, useEffect, useCallback, useRef } from 'react';
import ePub from 'epubjs';
import type { Book, Rendition } from 'epubjs';
import { booksAPI } from '@/api/books';
import { STORAGE_KEYS } from '@/types/state';
import type { BookDetail } from '@/types/api';

interface EpubReaderProps {
  book: BookDetail;
}

export const EpubReader: React.FC<EpubReaderProps> = ({ book }) => {
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string>('');
  const [isReady, setIsReady] = useState(false);
  const viewerRef = useRef<HTMLDivElement>(null);
  const renditionRef = useRef<Rendition | null>(null);
  const bookRef = useRef<Book | null>(null);
  const saveTimeoutRef = useRef<NodeJS.Timeout>();
  const hasRestoredPosition = useRef(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è epub.js –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥–∏
  useEffect(() => {
    if (!isReady) {
      console.log('‚è≥ Component not ready yet');
      return;
    }

    const initEpub = async () => {
      if (!viewerRef.current) {
        console.error('‚ùå Viewer ref is null');
        setError('Viewer container not found');
        return;
      }

      try {
        console.log('üì• Downloading EPUB file...');

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ fetch (—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)
        const token = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);
        const response = await fetch(booksAPI.getBookFileUrl(book.id), {
          headers: {
            'Authorization': `Bearer ${token}`,
          },
        });

        if (!response.ok) {
          throw new Error(`Failed to download EPUB: ${response.statusText}`);
        }

        const arrayBuffer = await response.arrayBuffer();
        console.log('‚úÖ EPUB file downloaded successfully', {
          size: arrayBuffer.byteLength
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º epub.js –Ω–∞–ø—Ä—è–º—É—é —Å ArrayBuffer
        const epubBook = ePub(arrayBuffer);
        bookRef.current = epubBook;

        // –°–æ–∑–¥–∞–µ–º rendition
        const rendition = epubBook.renderTo(viewerRef.current, {
          width: '100%',
          height: '100%',
          spread: 'none',
        });
        renditionRef.current = rendition;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
        rendition.themes.default({
          body: {
            color: '#e5e7eb !important',
            background: '#1f2937 !important',
            'font-family': 'Georgia, serif !important',
            'font-size': '1.1em !important',
            'line-height': '1.6 !important',
          },
          p: {
            'margin-bottom': '1em !important',
          },
          a: {
            color: '#60a5fa !important',
          },
        });

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º locations –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        console.log('üìä Generating locations for progress tracking...');
        await epubBook.locations.generate(1024); // 1024 —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ "—Å—Ç—Ä–∞–Ω–∏—Ü—É"
        console.log('‚úÖ Locations generated:', epubBook.locations.total);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —á—Ç–µ–Ω–∏—è
        const { progress } = await booksAPI.getReadingProgress(book.id);

        if (progress?.reading_location_cfi) {
          console.log('üìñ Restoring reading position:', progress.reading_location_cfi);
          await rendition.display(progress.reading_location_cfi);
        } else {
          await rendition.display();
        }

        hasRestoredPosition.current = true;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
        rendition.on('relocated', async (location: any) => {
          if (!hasRestoredPosition.current) {
            console.log('‚è≥ Skipping save - waiting for position restoration');
            return;
          }

          const cfi = location.start.cfi;

          // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ epub.js
          const currentLocation = epubBook.locations.percentageFromCfi(cfi);
          const progressPercent = Math.round((currentLocation || 0) * 100);

          console.log('üìç Location changed:', {
            cfi: cfi.substring(0, 50),
            progress: progressPercent + '%'
          });

          // Debounced —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
          if (saveTimeoutRef.current) {
            clearTimeout(saveTimeoutRef.current);
          }

          saveTimeoutRef.current = setTimeout(async () => {
            try {
              await booksAPI.updateReadingProgress(book.id, {
                current_chapter: 1,
                current_position_percent: progressPercent,
                reading_location_cfi: cfi,
              });
              console.log('üíæ Reading progress saved:', {
                cfi: cfi.substring(0, 50),
                progress: progressPercent + '%'
              });
            } catch (error) {
              console.error('‚ùå Error saving reading progress:', error);
            }
          }, 2000);
        });

        console.log('‚úÖ EPUB reader initialized');
        setIsLoading(false);
      } catch (err) {
        console.error('‚ùå Error initializing EPUB reader:', err);
        setError(err instanceof Error ? err.message : 'Error loading book');
        setIsLoading(false);
      }
    };

    initEpub();

    // Cleanup
    return () => {
      if (renditionRef.current) {
        renditionRef.current.destroy();
      }
      if (saveTimeoutRef.current) {
        clearTimeout(saveTimeoutRef.current);
      }
    };
  }, [book.id, isReady]);

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º isReady –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞
  useEffect(() => {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ DOM –≥–æ—Ç–æ–≤
    const timer = setTimeout(() => {
      console.log('üéØ Setting ready state, viewerRef:', !!viewerRef.current);
      setIsReady(true);
    }, 100);

    return () => clearTimeout(timer);
  }, []);

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  const handlePrevPage = useCallback(() => {
    if (renditionRef.current) {
      renditionRef.current.prev();
    }
  }, []);

  const handleNextPage = useCallback(() => {
    if (renditionRef.current) {
      renditionRef.current.next();
    }
  }, []);

  return (
    <div className="relative h-full w-full bg-gray-900">
      {/* EPUB Viewer - –≤—Å–µ–≥–¥–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è */}
      <div ref={viewerRef} className="h-full w-full" />

      {/* Error overlay */}
      {error && (
        <div className="absolute inset-0 flex items-center justify-center bg-gray-900">
          <div className="text-center">
            <p className="text-red-400 mb-4">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥–∏</p>
            <p className="text-gray-400 text-sm">{error}</p>
          </div>
        </div>
      )}

      {/* Loading overlay */}
      {isLoading && (
        <div className="absolute inset-0 flex items-center justify-center bg-gray-900">
          <div className="text-center">
            <div className="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mb-4"></div>
            <p className="text-gray-300">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥–∏...</p>
          </div>
        </div>
      )}

      {/* Navigation arrows - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {!isLoading && !error && (
        <>
          <button
            onClick={handlePrevPage}
            className="absolute left-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-gray-800/80 hover:bg-gray-700 text-white rounded-full flex items-center justify-center transition-colors"
            aria-label="Previous page"
          >
            ‚Üê
          </button>
          <button
            onClick={handleNextPage}
            className="absolute right-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-gray-800/80 hover:bg-gray-700 text-white rounded-full flex items-center justify-center transition-colors"
            aria-label="Next page"
          >
            ‚Üí
          </button>
        </>
      )}
    </div>
  );
};
