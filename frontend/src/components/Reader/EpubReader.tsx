import { useState, useEffect, useCallback, useRef } from 'react';
import { ReactReader } from 'react-reader';
import { booksAPI } from '@/api/books';
import { STORAGE_KEYS } from '@/types/state';
import type { BookDetail } from '@/types/api';

interface EpubReaderProps {
  book: BookDetail;
}

export const EpubReader: React.FC<EpubReaderProps> = ({ book }) => {
  const [location, setLocation] = useState<string | number>(0);
  const [isLoading, setIsLoading] = useState(true);
  const [epubUrl, setEpubUrl] = useState<string>('');
  const [error, setError] = useState<string>('');
  const saveTimeoutRef = useRef<NodeJS.Timeout>();
  const hasRestoredPosition = useRef(false);
  const blobUrlRef = useRef<string>('');

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å EPUB —Ñ–∞–π–ª –∏ —Å–æ–∑–¥–∞—Ç—å blob URL
  useEffect(() => {
    const loadEpubFile = async () => {
      try {
        console.log('üì• Downloading EPUB file...');

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ fetch (—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)
        const token = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);
        const response = await fetch(booksAPI.getBookFileUrl(book.id), {
          headers: {
            'Authorization': `Bearer ${token}`,
          },
        });

        if (!response.ok) {
          throw new Error(`Failed to download EPUB: ${response.statusText}`);
        }

        const blob = await response.blob();
        const blobUrl = URL.createObjectURL(blob);

        blobUrlRef.current = blobUrl;
        setEpubUrl(blobUrl);

        console.log('‚úÖ EPUB file downloaded successfully');
      } catch (err) {
        console.error('‚ùå Error downloading EPUB:', err);
        setError(err instanceof Error ? err.message : 'Error loading book');
        setIsLoading(false);
      }
    };

    loadEpubFile();

    // –û—á–∏—Å—Ç–∫–∞ blob URL –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (blobUrlRef.current) {
        URL.revokeObjectURL(blobUrlRef.current);
      }
    };
  }, [book.id]);

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (!epubUrl) return; // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ EPUB —Ñ–∞–π–ª–∞

    const loadProgress = async () => {
      try {
        const { progress } = await booksAPI.getReadingProgress(book.id);

        if (progress?.reading_location_cfi) {
          console.log('üìñ Restoring reading position:', progress.reading_location_cfi);
          setLocation(progress.reading_location_cfi);
        }

        hasRestoredPosition.current = true;
      } catch (error) {
        console.error('‚ùå Error loading reading progress:', error);
        hasRestoredPosition.current = true;
      } finally {
        setIsLoading(false);
      }
    };

    loadProgress();
  }, [book.id, epubUrl]);

  // Debounced —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —á—Ç–µ–Ω–∏—è
  const saveProgress = useCallback(
    (cfi: string) => {
      // –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
      if (saveTimeoutRef.current) {
        clearTimeout(saveTimeoutRef.current);
      }

      // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
      saveTimeoutRef.current = setTimeout(async () => {
        try {
          await booksAPI.updateReadingProgress(book.id, {
            current_chapter: 1, // epub.js –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–∞–º–∏
            current_position_percent: 0, // CFI –≤–∞–∂–Ω–µ–µ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            reading_location_cfi: cfi,
          });
          console.log('üíæ Reading progress saved:', cfi);
        } catch (error) {
          console.error('‚ùå Error saving reading progress:', error);
        }
      }, 2000);
    },
    [book.id]
  );

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
  const handleLocationChange = useCallback(
    (epubcfi: string) => {
      // –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
      if (!hasRestoredPosition.current) {
        console.log('‚è≥ Skipping save - waiting for position restoration');
        return;
      }

      console.log('üìç Location changed:', epubcfi);
      setLocation(epubcfi);
      saveProgress(epubcfi);
    },
    [saveProgress]
  );

  // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    return () => {
      if (saveTimeoutRef.current) {
        clearTimeout(saveTimeoutRef.current);
      }
    };
  }, []);

  if (error) {
    return (
      <div className="flex items-center justify-center h-screen bg-gray-900">
        <div className="text-center">
          <p className="text-red-400 mb-4">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥–∏</p>
          <p className="text-gray-400 text-sm">{error}</p>
        </div>
      </div>
    );
  }

  if (isLoading || !epubUrl) {
    return (
      <div className="flex items-center justify-center h-screen bg-gray-900">
        <div className="text-center">
          <div className="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mb-4"></div>
          <p className="text-gray-300">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥–∏...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="h-full w-full bg-gray-900">
      <ReactReader
        url={epubUrl}
        location={location}
        locationChanged={handleLocationChange}
        getRendition={(rendition) => {
          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—é rendition
          // –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∏–ª–µ–π –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

          // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
          rendition.themes.default({
            body: {
              color: '#e5e7eb !important',
              background: '#1f2937 !important',
              'font-family': 'Georgia, serif !important',
              'font-size': '1.1em !important',
              'line-height': '1.6 !important',
            },
            p: {
              'margin-bottom': '1em !important',
            },
            a: {
              color: '#60a5fa !important',
            },
          });

          console.log('‚úÖ EPUB rendition ready');
        }}
      />
    </div>
  );
};
