# Monitoring and logging stack for BookReader AI
# Note: version field removed (obsolete in Compose V2)

services:
  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:11.3.0
    container_name: bookreader_grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:?GRAFANA_PASSWORD is required}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel:1.1.5
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - ./monitoring/grafana/data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
    ports:
      - "3001:3000"
    networks:
      - bookreader_network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: bookreader_prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts:/etc/prometheus/alerts
      - ./monitoring/prometheus/data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - bookreader_network

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: bookreader_node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - bookreader_network

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: bookreader_cadvisor
    restart: unless-stopped
    # Security: Remove privileged mode, use specific capabilities instead
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor=unconfined
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    ports:
      - "8080:8080"
    networks:
      - bookreader_network

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: bookreader_loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/local-config.yaml
      - ./monitoring/loki/data:/loki
    networks:
      - bookreader_network

  # Promtail for log collection
  promtail:
    image: grafana/promtail:latest
    container_name: bookreader_promtail
    restart: unless-stopped
    volumes:
      - ./logs:/var/log/bookreader:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml
    networks:
      - bookreader_network

networks:
  bookreader_network:
    name: fancai-vibe-hackathon_bookreader_network
    external: true

volumes:
  grafana_data:
  prometheus_data:
  loki_data: